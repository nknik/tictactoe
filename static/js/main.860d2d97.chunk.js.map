{"version":3,"sources":["components/choosePlayer.js","components/Status.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["Player","e","preventDefault","this","props","player","target","value","class","onSubmit","handleForm","type","name","Component","Status","setPlayer","winner","handleSetPlayer","renderHtml","Footer","className","App","state","board","Array","fill","checkMatch","winLines","index","length","a","b","c","setState","setTimeout","alert","newBoard","checkWinner","map","box","key","onClick","handleClick","disabled","reset","renderBoxes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.860d2d97.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./one.css\";\n\nclass Player extends Component {\n  handleForm(e) {\n    e.preventDefault();\n    this.props.player(e.target.player.value);\n  }\n  render() {\n    return (\n      <center class='center'>\n        <form onSubmit={(e) => this.handleForm(e)}>\n          <label>\n            Player X\n            <input type=\"radio\" name=\"player\" value=\"X\" />\n          </label>\n          <label>\n            Player O\n            <input type=\"radio\" name=\"player\" value=\"O\" />\n          </label>\n          <br />\n          <input type=\"submit\" value=\"Start\" />\n        </form>\n        <br />\n      </center>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\nimport Player from './choosePlayer';\n\nclass Status extends Component {\n    handleSetPlayer(e) {\n        this.props.setPlayer(e)\n    }\n    renderHtml() {\n        if (this.props.winner) {\n            return (<h2>Winner is {this.props.winner}</h2>)\n        } else {\n            return this.props.player ?\n                <h2>Next player is {this.props.player}</h2> :\n                <Player player={(e) => this.handleSetPlayer(e)} />\n        }\n    }\n    render() {\n        return (<center><span>{this.renderHtml()}</span></center>)\n    }\n}\n\nexport default Status;","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n      <center><p>Made with <span class=\"heart\">‚ù§</span> & passion by Nikhil Chalikwar and Iconic Crew</p></center>\n      \n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/Header.css\";\n\nimport Status from \"./components/Status\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: Array(9).fill(null),\n      player: null,\n      winner: null,\n    };\n  }\n\n  checkWinner() {\n    let winLines = [\n      [\"0\", \"1\", \"2\"],\n      [\"3\", \"4\", \"5\"],\n      [\"6\", \"7\", \"8\"],\n      [\"0\", \"3\", \"6\"],\n      [\"1\", \"4\", \"7\"],\n      [\"2\", \"5\", \"8\"],\n      [\"0\", \"4\", \"8\"],\n      [\"2\", \"4\", \"6\"],\n    ];\n    this.checkMatch(winLines);\n  }\n\n  checkMatch(winLines) {\n    for (let index = 0; index < winLines.length; index++) {\n      const [a, b, c] = winLines[index];\n      let board = this.state.board;\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        this.setState({\n          winner: this.state.player,\n        });\n        setTimeout(() => {\n          alert(\" MATCH FINISHED WINNER IS \" + this.state.winner);\n        }, 150);\n      }\n    }\n  }\n\n  handleClick(index) {\n    if (this.state.player && !this.state.winner) {\n      let newBoard = this.state.board;\n      if (this.state.board[index] === null) {\n        newBoard[index] = this.state.player;\n        this.setState({\n          board: newBoard,\n          player: this.state.player === \"X\" ? \"O\" : \"X\",\n        });\n        this.checkWinner();\n      }\n    }\n  }\n  setPlayer(player) {\n    this.setState({ player });\n  }\n  renderBoxes() {\n    return this.state.board.map((box, index) => (\n      <div className=\"box\" key={index} onClick={() => this.handleClick(index)}>\n        {box}{\" \"}\n      </div>\n    ));\n  }\n  reset() {\n    this.setState({\n      player: null,\n      winner: null,\n      board: Array(9).fill(null),\n    });\n  }\n  render() {\n    return (\n      <center>\n        <div className=\"container\">\n          <header class=\"header\">\n            <h2> Iconic Crew presents</h2>\n\n            <h1>Tic Tac Toe</h1>\n            <ul>\n              <li>step 1:select player</li>\n              <li>step 2:press start</li>\n              <li>step 3:press reset</li>\n            </ul>\n            <div>\n              <button\n                disabled={!this.state.winner}\n                onClick={() => this.reset()}\n              >\n                {\" \"}\n                Reset\n              </button>{\" \"}\n              <button onClick={() => alert(\"Sorry,under construction!!!\")}>\n                play with CPU\n              </button>\n            </div>\n          </header>\n\n          <Status\n            player={this.state.player}\n            setPlayer={(e) => {\n              this.setPlayer(e);\n            }}\n            winner={this.state.winner}\n          />\n          <div className=\"board\">\n            {this.renderBoxes()}\n            <br />\n          </div>\n          <p> happy learning!!!!</p>\n          <Footer />\n        </div>\n      </center>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}